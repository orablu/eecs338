Wes Rupert - wkr3
eecs338    - hw03

1) Generate H2O molecules.
    monitor bond-queue
    begin
        procedure oxygen-enter()
        begin
            oxyCount++;
            if (hydroCount < 2) then
                oxygen.wait;
            hydrogen.signal;
            hydrogen.signal;
            oxyCount--;
        end

        procedure hydrogen-enter()
        begin
            hydroCount++;
            if (oxyCount < 1 || hydroCount < 2) then
                hydrogen.wait;
            hydrogen.signal;
            oxygen.signal;
            hydroCount--;
        end

        // Shared and condition variable initialization.
        begin
            int oxyCount := 0, hydroCount := 0;
            condition oxygen, hydrogen;
        end
    end

    Oxygen:
    bonds of-type bond-queue
        oxygen-enter();
        BOND();

    Hydrogen:
    bonds of-type bond-queue
        hydrogen-enter();
        BOND();


2) Silly baboons. Have some CCRs.
    var rope : shared record
    begin
        boolean left := true, right := false;
        int crossing := 0, crossed := 0;
    end

    procedure left-baboon()
    begin
        region rope when ((!right or (left and crossed > 10) or (right and crossing < 1)) and crossing < 5) do {
            if (crossed > 10 or crossing < 1) then {
                crossed = 0;
                crossing = 0;
                right = false;
                left = true;
            }
            crossing++;
        }
        CROSS();
        region rope do {
            crossing--;
            crossed++;
        }
    end

    procedure right-baboon()
    begin
        region rope when ((!left or (right and crossed > 10) or (left and crossing < 1)) and crossing < 5) do {
            if (crossed > 10 or crossing < 1) then {
                crossed = 0;
                crossing = 0;
                left = false;
                right = true;
            }
            crossing++;
        }
        CROSS();
        region rope do {
            crossing--;
            crossed++;
        }
    end
