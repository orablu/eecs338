(50 pts) 1) H2O Production Problem (semaphore-based process synchronization). There are two kinds of processes, oxygen and hydrogen. In order to assemble these processes into water molecules, we have to create a barrier that makes each process wait until a complete molecule is ready to proceed.

As each process passes the barrier, it should invoke bond. You must guarantee that all the processes from one molecule invoke bond before any of the processes from the next molecule do.

In other words:

- If an oxygen process arrives at the barrier when no hydrogen processes are present, it has to wait for two hydrogen processes.

- If a hydrogen process arrives at the barrier when no other processes are present, it has to wait for an oxygen process and another hydrogen process.

We don’t have to worry about matching the processes up explicitly; that is, the processes do not necessarily know which other processes they are paired up with. The key is just that processes pass the barrier in complete sets; thus, if we examine the sequence of processes that invoke bond and divide them into groups of three, each group should contain one oxygen and two hydrogen processes.

Write a monitor-based solution (i.e., an algorithm) to the H2O production problem. Explain your algorithm, and explicitly specify any assumptions you make about the model.


(50 pts) 2) Baboon Crossing Problem (semaphore-based process synchronization). There is a deep canyon somewhere in the Katavi National Park, Tanzania, and a single rope that spans the canyon. Baboons can cross the canyon by swinging hand-over-hand on the rope, but if two baboons going in opposite directions meet in the middle, they fight until one or both drop to their deaths. Furthermore, the rope is only strong enough to hold 5 baboons. If there are more baboons on the rope at the same time, it breaks.

Assuming that we can teach the baboons to use semaphores, we would like to design a synchronization scheme with the following properties:

- Once a baboon begins to cross, it is guaranteed to get to the other side without running into a baboon going the other way. (Remember, baboons have become smarter and now use semaphores for peacefully using the crossing, instead of fighting and killing each other).

- There are never more than 5 baboons on the rope.

- A continuing stream of baboons crossing in one direction should not bar baboons going the other way indefinitely (no starvation).

Write a CCR-based solution (i.e., an algorithm) to the Baboon Crossing problem. Explain your algorithm, and explicitly specify any assumptions you make about the model.
